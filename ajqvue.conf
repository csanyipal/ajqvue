# Example Ajqvue database parameters configuration loading file.
#
# This configuration file can be used by advanced users that wish to
# control the loading of database tables during the initialization
# process that Ajqvue goes through via the DatabaseMetaData API.
# The API method used by Ajqvue is:
# DatabaseMetaData.getTables(catalog, schemaPattern, tableNamePattern, types).
# 
# catalog - Catalog name; Must match the catalog name as it is stored
#           in the database; "" retrieves those without a catalog;
#           null means that the catalog name should not be used to
#           narrow the search. This parameter is not controlable from
#           this configuration file. Use the normal input method in
#           the Connection Manager for Database.
# schemaPattern - A schema name pattern; Must match the schema name
#                 as it is stored in the database; "" retrieves those
#                 without a schema; null means that the schema name
#                 should not be used to narrow the search.
# tableNamePattern - A table name pattern; Must match the table name
#                    as it is stored in the database.
# types - A list of table types, which must be from the list of table
#         types returned from getTableTypes(), to include; null returns
#         all types.
#
# Default parameters are given for each database that Ajqvue supports
# below. The Pound symbol, #, is taken as a comment in this file and will
# not be read as a parameter input. Ajqvue will automatically load
# the defaults for each database then use this file if present in the
# users home directory,  .Ajqvue, to override defaults. If you do not
# wish to override a parameter then leave commented. Please see the users
# manual or readme file for proper placement of a copy of this file for
# use. The percent, %, symbol for some databases is the same as null.
# The parameter inputs are normally case sensitive. You may uncomment
# multiple database parameters. Only the database's parameters that are
# currently being used for the connection will be loaded. The file then
# may be used as a multi-database connection configuration.
#
# One final note. Since Ajqvue uses addititional filtering besides just
# these parameters described above to load tables one additional input can
# be specified to gain complete control of loading the database tables,
# filter. Filter if left commented will then default to be filtering on.
# filter - on/off
#
# To obtain the broadest loading of the tables as possible, try filter off,
# and the rest of the parameters set to null.
# ========================================================================
# Copyright (C) 2016 Dana M. Proctor
#
# Version 09/16/2016 Initial Ajqvue Advanced User Configuration File.
#
# ------------------------------------------------------------------------
#                      danap@dandymadeproductions.com
# ========================================================================

# filter = on 

# HSQL PARAMETERS 
# hsql schemaPattern = % 
# hsql tablePattern = % 
# hsql types = TABLE, VIEW 

# MySQL PARAMETERS
# mysql schemaPattern =
# mysql tableNamePattern = % 
# mysql types = TABLE, VIEW 

# Oracle PARAMETERS
# oracle schemaPattern = %
# oracle tableNamePattern = % 
# oracle types = TABLE, VIEW

# PostgreSQL PARAMETERS
# postgresql schemaPattern =
# postgresql tableNamePattern = % 
# postgresql types = TABLE, VIEW 

# SQLite PARAMETERS
# sqlite schemaPattern = null
# sqlite tableNamePattern = null 
# sqlite types = TABLE, VIEW

# Derby PARAMETERS
# derby schemaPattern = null
# derby tableNamePattern = % 
# derby types = TABLE, VIEW

# H2 PARAMETERS
# h2 schemaPattern = null
# h2 tableNamePattern = %
# h2 types = TABLE, VIEW 

# MSSQL PARAMETERS
# mssql schemaPattern = null
# mssql tableNamePattern = %
# mssql types = TABLE, VIEW

# Other Database PARAMETERS
# other schemaPattern = null
# other tableNamePattern = null
# other types = TABLE, VIEW